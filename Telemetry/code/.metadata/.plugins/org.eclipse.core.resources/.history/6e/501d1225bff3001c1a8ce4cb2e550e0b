/*
 * sensorFunctions.h
 *
 *  Created on: Jun 17, 2022
 *      Author: Patryk
 */

//INCLUDES
#include "MPU9250.h"
#include "MLX90640_API.h"
#include "basicFunctions.h"
#include "i2c.h"
#include "sdmmc.h"
#include "ff.h"

#define DEBUG 1 // Debug writing on/off

typedef enum {
	GPS = 0,
	GYRO,
	MLX,
	VSS,
	WHEEL,
	DAMPER,

}SensorTypes;

typedef struct SensorStatus{
	unsigned int SDCARD : 1;
	unsigned int GPS : 1;
	unsigned int GYRO : 1;
	unsigned int MLXs : 2;
	unsigned int VSS : 2;
	unsigned int Wheel : 1;
	unsigned int Dampers : 2;
	unsigned int TeleBack : 1;



} SensorStatus;
/* *******GYRO SECTION  ********/
//GYRO DEFINES
//GYRO STRUCTS

typedef struct imu_9dof
{
	int16_t acc_data[3];
	int16_t mag_data[3];
	int16_t gyro_data[3];
}imu_9dof;

typedef struct imu_9dof_calc
{
	double acc_data_calc[3];
	double gyro_data_calc[3];
}imu_9dof_calc;
typedef struct GYRO{
	imu_9dof allData;
	imu_9dof_calc data;
	I2C_HandleTypeDef i2c;
}GyroSensor;
//GYRO FUNCS
void initSensor(Sensor sens);
void imu_9dof_convert(struct imu_9dof * input, struct imu_9dof_calc * output);

void imu_9dof_get_data(struct imu_9dof * imu_9dof_data, struct imu_9dof_calc * imu_9dof_calculated);


/* *******MLX90640 SECTION  ********/
//MLX DEFINES

#define  FPS2HZ   0x02
#define  FPS4HZ   0x03
#define  FPS8HZ   0x04
#define  FPS16HZ  0x05
#define  FPS32HZ  0x06

#define  MLX90640_ADDR 0x33 // Defult mlx address
#define	 RefreshRate 0x04
#define  TA_SHIFT 8 //Default shift for MLX90640 in open air

#define leftFrontWheelI2C hi2c1
#define rightFrontWheelI2C hi2c2
//MLX STRUCTS
//UNIONS?
typedef struct MLX{

	int ID ;
	I2C_HandleTypeDef i2c; // I2C connected to sensor
	paramsMLX90640 mlx90640;
	float data[768]; // data frame array of 768 pixels
	float ambientTemp; // temperature of sensor itself
	float vdd; // Voltage
	float emissivity;

}MLXSensor;

typedef struct {
    FIL *File; //mlx File to write
    char path[20]; // path of file to write;
	int dataReady; // flag to check if data is ready to read/write to file
	int saveRate;
	int timeToNextRead;
	SensorTypes type ;
	union {
		MLXSensor mlx;
		GyroSensor gyro;
	}sensor;

}Sensor;
//MLX global variables define



//MLX FUNCS
int mlxInit(MLXSensor *mlx);

//Copy and calcualte data from sensor memory to stm
int mlxGetData(MLXSensor mlx);

//DEBUG printing on default uart
void mlxPrintData(MLXSensor mlx);
